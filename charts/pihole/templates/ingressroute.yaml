{{- if and (eq (include "pihole.enableIngressRoute" . | trim) "true") (eq (include "pihole.enableIngress" . | trim) "false") }}
  {{- $ingressClassName := required "Error - Ingress class name .Values.pihole.ingressRoute.ingressClassName is not provided for IngressRoute" .Values.pihole.ingressRoute.ingressClassName }}
  {{- if $ingressClassName }}
    {{- if not (hasKey .Values.pihole.ingressRoute.annotations "kubernetes.io/ingress.class") }}
      {{- $_ := set .Values.pihole.ingressRoute.annotations "kubernetes.io/ingress.class" $ingressClassName }}
    {{- end }}
  {{- end }}

apiVersion: traefik.io/v1alpha1
kind: IngressRoute
metadata:
  name: {{ include "pihole.ingressRouteName" . }}
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "pihole.labels" . | nindent 4 }}
  {{- with .Values.pihole.ingressRoute.annotations }}
  annotations:
    {{- toYaml . | nindent 4 }}
  {{- end }}
spec:
  entryPoints:
    {{- if and (not .Values.pihole.ingressRoute.entryPoints) (eq (len .Values.pihole.ingressRoute.entryPoints) 0) -}}
      {{ fail "Error: IngressRoute entrypoint .Values.pihole.ingressRoute.entryPoints is not provided."}}
    {{- end }}
    {{- range .Values.pihole.ingressRoute.entryPoints }}
    - {{ . }}
    {{- end }}
  routes:
    - match: {{ include "pihole.ingressHost" . }}
      kind: Rule
      services:
        - name: {{ include "pihole.adminServiceName" . }}
          namespace: {{ .Release.Namespace }}
          port: {{ .Values.pihole.ingressRoute.secureBackends | ternary 443 80 }} 
  {{- if .Values.pihole.ingressRoute.tls.enabled }}
  tls:
    secretName: {{ include "pihole.domainCertSecretName" . }}
  {{- end }}
{{- end }}
