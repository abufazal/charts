{{- if and .Values.pihole.ingressRoute.enabled .Values.pihole.ingressRoute.tls.enabled (empty .Values.pihole.ingressRoute.tls.secret) }}
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: {{ include "pihole.domainCertName" . }}
  labels:
    {{- include "pihole.labels" . | nindent 4 }}  
  namespace: cert-manager
spec:
  secretTemplate:
    annotations:
      reflector.v1.k8s.emberstack.com/reflection-auto-enabled: "true"
      reflector.v1.k8s.emberstack.com/reflection-allowed: "true"
      reflector.v1.k8s.emberstack.com/reflection-auto-namespaces: {{ .Release.Namespace }}
      reflector.v1.k8s.emberstack.com/reflection-allowed-namespaces: {{ include "pihole.reflectNamespaces" . }}
    labels:
      {{- include "pihole.labels" . | nindent 6 }}  
  secretName: {{ include "pihole.domainCertSecretName" . }}
  issuerRef:
    {{- include "pihole.validateValue" list .Values.pihole.ingressRoute.tls.cert.issuerName "Error: Certificate Issuer Name .Values.pihole.ingressRoute.tls.cert.issuerName is not provided" -}}
    name: {{ .Values.pihole.deployment.ingressRoute.domain.cert.issuer.name }}
    {{- include "pihole.validateValue" list .Values.pihole.ingressRoute.tls.cert.issuerType "Error: Certificate Issuer Type .Values.pihole.ingressRoute.tls.cert.issuerType is not provided" -}}
    kind: {{ .Values.pihole.deployment.ingressRoute.domain.cert.issuer.type }}
  {{- include "pihole.validateValue" list .Values.pihole.ingressRoute.host "Error: IngressRoute host is not provided" -}}
  commonName: {{ .Values.pihole.deployment.ingressRoute.host }}
  dnsNames:
  - {{ .Values.pihole.deployment.ingressRoute.host }}
{{- end }}