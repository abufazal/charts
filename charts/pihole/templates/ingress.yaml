{{- if .Values.ingress.enabled }}
{{- if and .Values.ingress.className (not (semverCompare ">=1.18-0" .Capabilities.KubeVersion.GitVersion)) }}
  {{- if not (hasKey .Values.ingress.annotations "kubernetes.io/ingress.class") }}
  {{- $_ := set .Values.ingress.annotations "kubernetes.io/ingress.class" .Values.ingress.ingressClassName }}
  {{- end }}
{{- end }}
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: {{ include "pihole.ingressName" }}
  namespace: {{ .Release.Namespace }}
  labels: 
    {{- include "pihole.labels" . | nindent 4 }}
  {{- with .Values.ingress.annotations }}
  annotations:
    {{- toYaml . | nindent 4 }}
    {{- if .Values.ingress.secureBackends }}
    ingress.kubernetes.io/secure-backends: "true"
    {{- end }}
  {{- end }}
spec:
  {{- if .Values.ingress.ingressClassName }}
  ingressClassName: {{ .Values.ingress.ingressClassName }}
  {{- end }}
  rules:
  - host: {{ .Values.ingress.host }}
    http:
      paths:
        - path: {{ default "/admin" .Values.ingress.path }}
          pathType: {{ default "ImplementationSpecific" .Values.ingress.pathType }}
          backend:
            service:
              name: {{ include "pihole.adminServiceName" . }}
              port:
                number: 80
{{- if .Values.ingress.tls }}
  tls:
  - hosts:
    - {{ .Values.ingress.host }}
    secretName: {{ .Values.ingress.tlsSecret }}
{{- end }}
{{- end }}
