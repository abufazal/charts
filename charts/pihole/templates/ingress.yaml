{{- if and (eq (include "pihole.enableIngress" . | trim) "true") (eq (include "pihole.enableIngressRoute" . | trim) "false") }}
  {{- $ingressClassName := required "Error - Ingress class name is not provided." .Values.pihole.ingress.ingressClassName }}
  {{- $secureBackend := default false .Values.pihole.ingress.secureBackends }}
  {{- if $ingressClassName }}
    {{- if not (hasKey .Values.pihole.ingress.annotations "kubernetes.io/ingress.class") }}
      {{- $_ := set .Values.pihole.ingress.annotations "kubernetes.io/ingress.class" $ingressClassName }}
    {{- end }}
  {{- end }}
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: {{ include "pihole.ingressName" . }}
  namespace: {{ .Release.Namespace }}
  labels: 
    {{- include "pihole.labels" . | nindent 4 }}
  {{- with .Values.pihole.ingress.annotations }}
  annotations:
    {{- toYaml . | nindent 4 }}    
    ingress.kubernetes.io/secure-backends: {{ $secureBackend | quote }}
  {{- end }}
spec:
  ingressClassName: {{ $ingressClassName }}
  rules:
  - host: {{ include "pihole.ingressHost" . }}
    http:
      paths:
        - path: "/admin"
          pathType: ImplementationSpecific
          backend:
            service:
              name: {{ include "pihole.adminServiceName" . }}
              port:
                number: 80
{{- if .Values.pihole.ingress.tls.enabled }}
  tls:
  - hosts:
    - {{ .Values.pihole.ingress.host }}
    secretName: {{ include "pihole.domainCertSecretName" . }}
{{- end }}
{{- end }}
